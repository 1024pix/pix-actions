name: Generate Changelog and Release
description: >-
  This workflow will generate a changelog and release a new version of the
  project.

os: ubuntu-latest

inputs:
  npmPublish:
    required: false
    description: >-
      Whether to publish to npm or not. If set to false, the release will only
      be created on GitHub.
    default: false
  updateMajorVersion:
    required: false
    description: >-
      Whether to update the major version or not. If set to true, the major
      version will be updated.
    default: false

runs:
  using: composite
  steps:
    - name: Copy release config in repo
      run: cp ${{ github.action_path }}/release.config.cjs ${{ github.workspace }}/release.config.cjs
      shell: bash

    - name: Semantic Release
      id: semantic
      uses: cycjimmy/semantic-release-action@v4
      with:
        semantic_version: 23
        extra_plugins: |
          @semantic-release/changelog@6
          @semantic-release/git@10
        extends: |
          @1024pix/conventional-changelog-pix@2
      env:
        GITHUB_TOKEN: ${{ env.GITHUB_TOKEN }}
        NPM_TOKEN: ${{ env.NPM_TOKEN }}
        NPM_PUBLISH: ${{ inputs.npmPublish }}

    - name: share variables
      if: steps.semantic.outputs.new_release_published == 'true'
      run: |
        echo "new_release_published=${{ steps.semantic.outputs.new_release_published }}" >> $GITHUB_ENV
        echo "new_release_version=${{ steps.semantic.outputs.new_release_version }}" >> $GITHUB_ENV
        echo "new_release_major_version=${{ steps.semantic.outputs.new_release_major_version }}" >> $GITHUB_ENV
        echo "new_release_minor_version=${{ steps.semantic.outputs.new_release_minor_version }}" >> $GITHUB_ENV
        echo "new_release_patch_version=${{ steps.semantic.outputs.new_release_patch_version }}" >> $GITHUB_ENV
      shell: bash

    - name: Push updates to branch for major version
      if: steps.semantic.outputs.new_release_published == 'true' && inputs.updateMajorVersion == 'true'
      run: "git push https://x-access-token:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git HEAD:refs/heads/v${{steps.semantic.outputs.new_release_major_version}}"
      shell: bash
      env:
        GITHUB_TOKEN: ${{ env.GITHUB_TOKEN }}
